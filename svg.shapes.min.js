// svg.shapes.js 0.0.2 - Copyright (c) 2013-2014 Wout Fierens - Licensed under the MIT license
(function(root,factory){if(typeof define==="function"&&define.amd){define(factory(root.SVG))}else if(typeof exports==="object"){module.exports=function(svgjs){if(!svgjs)svgjs=require("svg.js");svgjs=factory(svgjs);return svgjs}}else{root.SVG=factory(root.SVG)}})(this,function(SVG){var SVG=this.SVG=SVG;var defaults={spikes:7,inner:50,outer:100,edges:7,radius:100};SVG.extend(SVG.Polyline,SVG.Polygon,{star:function(settings){var box=this.bbox();this.settings=merge(this.settings,settings);return this.plot(SVG.shapes.star(this.settings).move(box.x,box.y))},ngon:function(settings){var box=this.bbox();this.settings=merge(this.settings,settings);return this.plot(SVG.shapes.ngon(this.settings).move(box.x,box.y))}});SVG.extend(SVG.FX,{star:function(settings){var box=this.bbox();this.target.settings=merge(this.target.settings,settings);return this.plot(SVG.shapes.star(this.target.settings).move(box.x,box.y))},ngon:function(settings){var box=this.bbox();this.target.settings=merge(this.target.settings,settings);return this.plot(SVG.shapes.ngon(this.target.settings).move(box.x,box.y))}});SVG.shapes={star:function(settings){var i,a,x,y,points=[],spikes=typeof settings.spikes=="number"?settings.spikes:defaults.spikes,inner=typeof settings.inner=="number"?settings.inner:defaults.inner,outer=typeof settings.outer=="number"?settings.outer:defaults.outer,degrees=360/spikes;for(i=0;i<spikes;i++){a=i*degrees+90;x=outer+inner*Math.cos(a*Math.PI/180);y=outer+inner*Math.sin(a*Math.PI/180);points.push([x,y]);a+=degrees/2;x=outer+outer*Math.cos(a*Math.PI/180);y=outer+outer*Math.sin(a*Math.PI/180);points.push([x,y])}return new SVG.PointArray(points)},ngon:function(settings){var i,a,x,y,points=[],edges=typeof settings.edges=="number"?settings.edges:defaults.edges,radius=typeof settings.radius=="number"?settings.radius:defaults.radius,degrees=360/edges;for(i=0;i<edges;i++){a=i*degrees-90;x=radius+radius*Math.cos(a*Math.PI/180);y=radius+radius*Math.sin(a*Math.PI/180);points.push([x,y])}return new SVG.PointArray(points)}};function merge(target,object){var key,settings={};target=target||{};object=object||{};for(key in defaults)settings[key]=typeof object[key]==="number"?object[key]:typeof target[key]==="number"?target[key]:defaults[key];return settings}return SVG});
